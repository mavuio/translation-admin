// Generated by CoffeeScript 1.6.2
angular.module("wien-import").directive("wienImportLocation", function() {
  return {
    restrict: "A",
    replace: true,
    templateUrl: "/mysite/ng/wien-import/partials/wien-import-location.html",
    scope: true,
    link: function(scope, element, attrs) {},
    controller: [
      "$scope", "$element", "$attrs", "$timeout", "$transclude", "$http", "$q", function($scope, $element, $attrs, $timeout, $transclude, $http, $q) {
        $scope.subresult = {};
        $scope.subquery = {};
        $scope.$on('expand_item', function(event, id) {
          if (+$scope.item.loc_id === +id && !(typeof $scope.item === "function" ? $scope.item(expanded) : void 0)) {
            $scope.toggleItem($scope.item);
            if (window.console && console.log) {
              return console.log("expand location on ", id, $scope.item);
            }
          }
        });
        $scope.tinymceOptions = {
          menubar: false,
          plugins: ["code fullscreen contextmenu autoresize"],
          toolbar1: "bold italic | undo redo | link unlink | removeformat | code fullscreen",
          autoresize_min_height: 100,
          autoresize_max_height: 600
        };
        $scope.associate_location = function(item, l) {
          return $http.post($scope.settings.baseUrl + "ng-associate-location", {
            foreign_loc: l,
            live_id: item.loc_id
          }).then(function(response) {
            if (window.console && console.log) {
              console.log("associate-location", response);
            }
            if (response.data && response.data.status === 'ok') {
              if (window.console && console.log) {
                console.log("assoc", response.data);
              }
              if (response.data.foreign_locs) {
                item.foreign_locs = response.data.foreign_locs;
              }
              return response;
            } else {
              return $q.reject('cannot associate-location');
            }
          });
        };
        $scope.de_associate_location = function(item, l) {
          return $http.post($scope.settings.baseUrl + "ng-de-associate-location", {
            foreign_loc: l,
            live_id: item.loc_id
          }).then(function(response) {
            if (window.console && console.log) {
              console.log("de-associate-location", response);
            }
            if (response.data && response.data.status === 'ok') {
              if (window.console && console.log) {
                console.log("assoc", response.data);
              }
              if (response.data.foreign_locs) {
                item.foreign_locs = response.data.foreign_locs;
              }
              return response;
            } else {
              return $q.reject('cannot de-associate-location');
            }
          });
        };
        $scope.toggleItem = function(item, e) {
          var newval;

          newval = (item.expanded ? false : true);
          if ($scope.app.currentExpandedItem && $scope.app.currentExpandedItem !== item) {
            $scope.app.currentExpandedItem.expanded = false;
            $scope.app.currentExpandedItem = null;
          }
          if (newval === true) {
            if (typeof item.data === "undefined") {
              item.data = {};
              item.record = {
                loading: true
              };
              $scope.loadDetailsForItem(item.loc_id).then(function(itemdata) {
                item.data = itemdata;
                if (item.data.livedata) {
                  return item.record = angular.copy(item.data.livedata);
                }
              });
            }
            $scope.app.currentExpandedItem = item;
            $scope.updateUrl({
              path: '/' + item.loc_id
            });
            $timeout(function() {
              return angular.element('.savebutton').focus();
            }, 200);
          }
          item.expanded = newval;
          if ($scope.app.currentExpandedItem && !$scope.app.currentExpandedItem.expanded) {
            return $scope.updateUrl({
              path: 'empty'
            });
          }
        };
        $scope.reload_subresult = function() {
          if (window.console && console.log) {
            console.log("reload subres", null);
          }
          $scope.subresult.status = 'loading';
          return $http.post($scope.settings.baseUrl + "ng-get-importedlocations", {
            query: $scope.subquery
          }).then(function(response) {
            return $scope.subresult = response.data;
          });
        };
        $scope.skipItem = function(item, e) {
          if (confirm('diesen Ort wirklich aus der Liste der zu importierenden Locations entfernen ?')) {
            return $scope.setItemval('loc', item.loc_id, 'Status', 'skipped').then(function() {
              return $element.closest('li').slideUp(500, function() {
                return this.remove();
              });
            });
          }
        };
        $scope.saveItem = function(item, idx) {
          return $scope.saveDetailsForItem(item.record).then(function() {
            $element.closest('li').slideUp(500, function() {
              return this.remove();
            });
            return $scope.toggleItem($scope.items[idx + 1], null);
          });
        };
        $scope.setItemval = function(type, id, fieldname, value) {
          return $http.post($scope.settings.baseUrl + "ng-set-itemval", {
            type: type,
            id: id,
            fieldname: fieldname,
            value: value
          }).then(function(response) {
            if (window.console && console.log) {
              console.log("setItemval", response);
            }
            if (response.data && response.data.status === 'ok') {
              return response;
            } else {
              return $q.reject('cannot set value on object');
            }
          });
        };
        $scope.loadDetailsForItem = function(id) {
          return $http.post($scope.settings.baseUrl + "ng-location-details", {
            id: id
          }).then(function(response) {
            if (response.data) {
              return response.data;
            } else {
              return $q.reject('cannot load details for location');
            }
          });
        };
        return $scope.saveDetailsForItem = function(record) {
          return $http.post($scope.settings.baseUrl + "ng-save-location", {
            record: record
          }).then(function(response) {
            if (response.data && response.data.status === 'ok') {
              return response;
            } else {
              return $q.reject('cannot save details for location');
            }
          });
        };
      }
    ]
  };
});

/*
//@ sourceMappingURL=translation-admin-index.map
*/
